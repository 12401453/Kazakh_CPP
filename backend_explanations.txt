retrieveEngword() should:

take in word_engine_id. tokno and lang_id of the clicked-on word and give back either

1.) The lemma-form which this word has been assigned to, the lemma_meaning, the lemma_meaning_no (out of 10), and the part-of-speech tag
OR
2.) The word_engine "word" field as the lemma, if no lemma has been assigned to this display_word
OR
3.) If this word_engine "word" has previously been assigned a lemma(s) but not this display_word, we should give back the lemma_form and lemma_meaning associated with this word_engine word's "first_lemma_id" field, which is set when a word_engine word is first annotated.

The ultimate assignment of lemma_id's to words is achieved via the display_text table's lemma_id (and lemma_meaning_no) fields; the word_engine table holds only the first_lemma_id for the purposes of auto-annotating all the words which share an annotated word's form, but these autoannotations do not involve assignment of lemmas to the display_text so they are placeholders subject to confirmation, rejection or modification

It is the responsibility of the deleteLemma() functions to ensure that the word_engine's first_lemma_id can never point to a deleted lemma, and that the display_text table's lemma_id field can never be assigned to a deleted lemma
Currently the PHP defaults to giving lemma_meaning_no as "null" on unannotated but uniform-with-previously-annotated words, but the meaning no 1 is displayed, so this behaviour needs more explicit definition

The user can give no meaning for meaning1 and a meaning for meaning10, which probably is unwise, so when giving back lemma_meanings in this function we need either to loop through the meanings until we get to the first non-empty one with the lowest meaning_no, or snap the users' meanings back to the start of the meanings{} array if they do stupid shit like put only a meaning 10 in.
